{"version":3,"sources":["shared/services/movies.js","Pages/MovieDetailsPage/MovieDetailsPage.module.css","Pages/MovieDetailsPage/MovieDetailsPage.jsx"],"names":["instance","axios","create","baseURL","params","api_key","searchMovies","query","get","getTrendingMovies","a","data","results","getMovieInfo","id","language","getMovieCredits","getMovieReviews","page","module","exports","CastPage","lazy","ReviewsPage","MovieDetailsPage","location","useLocation","history","useHistory","movieId","useParams","useState","movie","setMovie","useEffect","fetchMovie","className","styles","Button","type","onClick","state","from","prevLocation","push","Container","Image","src","poster_path","alt","width","Description","Title","title","release_date","slice","vote_average","Overview","overview","Genres","genres","map","genre","name","join","InfoTitle","AdditionalInfo","to","pathname","Link","fallback","path"],"mappings":"wVAEMA,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAe,SAACC,GAC3B,OAAOP,EAASQ,IAAI,gBAAiB,CACnCJ,OAAQ,CACNG,YAKOE,EAAiB,uCAAG,8BAAAC,EAAA,sEACRV,EAASQ,IAAI,uBADL,uBACvBG,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,SAACC,GAC3B,OAAOd,EAASQ,IAAT,iBAAuBM,GAAM,CAClCV,OAAQ,CACNW,SAAU,YAKHC,EAAkB,SAACF,GAC9B,OAAOd,EAASQ,IAAT,iBAAuBM,EAAvB,YAAqC,CAC1CV,OAAQ,CACNW,SAAU,YAKHE,EAAkB,SAACH,GAAkB,IAAdI,EAAa,uDAAN,EACzC,OAAOlB,EAASQ,IAAT,iBAAuBM,EAAvB,YAAqC,CAC1CV,OAAQ,CACNW,SAAU,QACVG,Y,mBCzCNC,EAAOC,QAAU,CAAC,UAAY,oCAAoC,MAAQ,gCAAgC,UAAY,oCAAoC,eAAiB,yCAAyC,KAAO,+BAA+B,SAAW,mCAAmC,WAAa,qCAAqC,OAAS,mC,iJCc7VC,EAAWC,gBAAK,kBAAM,gCACtBC,EAAcD,gBAAK,kBAAM,gCAoGhBE,UAlGU,WACvB,IAAMC,EAAWC,cACXC,EAAUC,cACRC,EAAYC,cAAZD,QAHqB,EAIHE,mBAAS,MAJN,mBAItBC,EAJsB,KAIfC,EAJe,KAM7BC,qBAAU,YACQ,uCAAG,8BAAAxB,EAAA,+EAEQG,YAAagB,GAFrB,gBAEPlB,EAFO,EAEPA,KACRsB,EAAStB,GAHM,yGAAH,qDAMhBwB,KACC,CAACN,IAYJ,OACE,mCACGG,GACC,qCACE,wBAAQI,UAAWC,IAAOC,OAAQC,KAAK,SAASC,QAdrC,WAAO,IAAD,EACvB,UAAIf,QAAJ,IAAIA,GAAJ,UAAIA,EAAUgB,aAAd,aAAI,EAAiBC,KAAM,CACzB,IAAMC,EAAelB,EAASgB,MAAMC,KACpCf,EAAQiB,KAAKD,QAEbhB,EAAQiB,KAAK,MAST,qBAGA,sBAAKR,UAAWC,IAAOQ,UAAvB,UACE,qBAAKT,UAAWC,IAAOS,MAAvB,SACE,qBACEC,IAXI,kCAWaf,EAAMgB,YACvBC,IAAI,SACJC,MAAM,UAGV,0BAASd,UAAWC,IAAOc,YAA3B,UACE,qBAAIf,UAAWC,IAAOe,MAAtB,UACGpB,EAAMqB,MADT,KACkBrB,EAAMsB,aAAaC,MAAM,EAAG,GAD9C,OAGA,6CAAqC,GAArBvB,EAAMwB,aAAtB,OACA,oBAAIpB,UAAWC,IAAOoB,SAAtB,sBACA,+BAAOzB,EAAM0B,WACb,oBAAItB,UAAWC,IAAOsB,OAAtB,oBACA,+BAAO3B,EAAM4B,OAAOC,KAAI,SAACC,GAAD,OAAWA,EAAMC,QAAMC,KAAK,aAGxD,gCACE,oBAAI5B,UAAWC,IAAO4B,UAAtB,oCACA,sBAAK7B,UAAWC,IAAO6B,eAAvB,UACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAavC,EAAb,YACRY,MAAO,CACLC,KAAMjB,EAASgB,MAAMC,OAGzBN,UAAWC,IAAOgC,KAPpB,iBASO,OAGP,eAAC,IAAD,CACEF,GAAI,CACFC,SAAS,WAAD,OAAavC,EAAb,YACRY,MAAO,CACLC,KAAMjB,EAASgB,MAAMC,OAGzBN,UAAWC,IAAOgC,KAPpB,oBASU,aAKd,cAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,sBAAZ,SACE,cAAClD,EAAD,MAGF,cAAC,IAAD,CAAOkD,KAAK,sBAAZ,SACE,cAAChD,EAAD","file":"static/js/7.bdef9166.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  params: {\n    api_key: \"67e32eac52b358cb1bf13e724f501ef6\",\n  },\n});\n\nexport const searchMovies = (query) => {\n  return instance.get(\"/search/movie\", {\n    params: {\n      query,\n    },\n  });\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get(\"/trending/movie/day\");\n  return data.results;\n};\n\nexport const getMovieInfo = (id) => {\n  return instance.get(`/movie/${id}`, {\n    params: {\n      language: \"ru-RU\",\n    },\n  });\n};\n\nexport const getMovieCredits = (id) => {\n  return instance.get(`/movie/${id}/credits`, {\n    params: {\n      language: \"ru-RU\",\n    },\n  });\n};\n\nexport const getMovieReviews = (id, page = 1) => {\n  return instance.get(`/movie/${id}/reviews`, {\n    params: {\n      language: \"en-EN\",\n      page,\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"MovieDetailsPage_Container__36RiI\",\"Image\":\"MovieDetailsPage_Image__KNDyq\",\"InfoTitle\":\"MovieDetailsPage_InfoTitle__nKzKL\",\"AdditionalInfo\":\"MovieDetailsPage_AdditionalInfo__25mdg\",\"Link\":\"MovieDetailsPage_Link__1zoKJ\",\"CastLink\":\"MovieDetailsPage_CastLink__16Q7e\",\"ReviewItem\":\"MovieDetailsPage_ReviewItem__17pFJ\",\"Button\":\"MovieDetailsPage_Button__WX0Jx\"};","import React from \"react\";\nimport { useState, lazy, Suspense } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { getMovieInfo } from \"../../shared/services/movies\";\nimport {\n  NavLink,\n  useLocation,\n  Switch,\n  Route,\n  useHistory,\n} from \"react-router-dom\";\nimport Spinner from \"../../client/Spinner/Spinner\";\nimport styles from \"./MovieDetailsPage.module.css\";\n\nconst CastPage = lazy(() => import(\"./CastPage\"));\nconst ReviewsPage = lazy(() => import(\"./ReviewPage\"));\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const { data } = await getMovieInfo(movieId);\n        setMovie(data);\n      } catch (error) {}\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  const handleBack = () => {\n    if (location?.state?.from) {\n      const prevLocation = location.state.from;\n      history.push(prevLocation);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  const imagePath = \"https://image.tmdb.org/t/p/w500\";\n  return (\n    <>\n      {movie && (\n        <>\n          <button className={styles.Button} type=\"button\" onClick={handleBack}>\n            Go back\n          </button>\n          <div className={styles.Container}>\n            <div className={styles.Image}>\n              <img\n                src={imagePath + movie.poster_path}\n                alt=\"poster\"\n                width=\"250\"\n              />\n            </div>\n            <section className={styles.Description}>\n              <h2 className={styles.Title}>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </h2>\n              <p>User Score: {movie.vote_average * 10}%</p>\n              <h3 className={styles.Overview}>Overview</h3>\n              <span>{movie.overview}</span>\n              <h3 className={styles.Genres}>Genres</h3>\n              <span>{movie.genres.map((genre) => genre.name).join(\" \")}</span>\n            </section>\n          </div>\n          <div>\n            <h3 className={styles.InfoTitle}>Additional information</h3>\n            <nav className={styles.AdditionalInfo}>\n              <NavLink\n                to={{\n                  pathname: `/movies/${movieId}/credits`,\n                  state: {\n                    from: location.state.from,\n                  },\n                }}\n                className={styles.Link}\n              >\n                Cast{\" \"}\n              </NavLink>\n\n              <NavLink\n                to={{\n                  pathname: `/movies/${movieId}/reviews`,\n                  state: {\n                    from: location.state.from,\n                  },\n                }}\n                className={styles.Link}\n              >\n                Reviews{\" \"}\n              </NavLink>\n            </nav>\n          </div>\n\n          <Suspense fallback={<Spinner />}>\n            <Switch>\n              <Route path=\"/movies/:id/credits\">\n                <CastPage />\n              </Route>\n\n              <Route path=\"/movies/:id/reviews\">\n                <ReviewsPage />\n              </Route>\n            </Switch>\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"sourceRoot":""}